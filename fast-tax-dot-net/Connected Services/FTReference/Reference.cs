//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FTReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BestMatchResponse", Namespace="http://www.serviceobjects.com")]
    public partial class BestMatchResponse : object
    {
        
        private FTReference.BestMatchTaxInfo[] TaxInfoItemsField;
        
        private string MatchLevelField;
        
        private FTReference.Err ErrorField;
        
        private string DebugField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public FTReference.BestMatchTaxInfo[] TaxInfoItems
        {
            get
            {
                return this.TaxInfoItemsField;
            }
            set
            {
                this.TaxInfoItemsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string MatchLevel
        {
            get
            {
                return this.MatchLevelField;
            }
            set
            {
                this.MatchLevelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public FTReference.Err Error
        {
            get
            {
                return this.ErrorField;
            }
            set
            {
                this.ErrorField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string Debug
        {
            get
            {
                return this.DebugField;
            }
            set
            {
                this.DebugField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Err", Namespace="http://www.serviceobjects.com")]
    public partial class Err : object
    {
        
        private string DescField;
        
        private string LocationField;
        
        private string NumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Desc
        {
            get
            {
                return this.DescField;
            }
            set
            {
                this.DescField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Location
        {
            get
            {
                return this.LocationField;
            }
            set
            {
                this.LocationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Number
        {
            get
            {
                return this.NumberField;
            }
            set
            {
                this.NumberField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BestMatchTaxInfo", Namespace="http://www.serviceobjects.com")]
    public partial class BestMatchTaxInfo : object
    {
        
        private string ZipField;
        
        private string CityField;
        
        private string CountyField;
        
        private string StateNameField;
        
        private string StateAbbreviationField;
        
        private string TaxRateField;
        
        private string StateRateField;
        
        private string CityRateField;
        
        private string CountyRateField;
        
        private string CityDistrictRateField;
        
        private string CountyDistrictRateField;
        
        private string SpecialDistrictRateField;
        
        private string NotesCodesField;
        
        private string NotesDescField;
        
        private FTReference.InformationComponent[] InformationComponentsField;
        
        private string TotalTaxExemptField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Zip
        {
            get
            {
                return this.ZipField;
            }
            set
            {
                this.ZipField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string City
        {
            get
            {
                return this.CityField;
            }
            set
            {
                this.CityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string County
        {
            get
            {
                return this.CountyField;
            }
            set
            {
                this.CountyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string StateName
        {
            get
            {
                return this.StateNameField;
            }
            set
            {
                this.StateNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string StateAbbreviation
        {
            get
            {
                return this.StateAbbreviationField;
            }
            set
            {
                this.StateAbbreviationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string TaxRate
        {
            get
            {
                return this.TaxRateField;
            }
            set
            {
                this.TaxRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public string StateRate
        {
            get
            {
                return this.StateRateField;
            }
            set
            {
                this.StateRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string CityRate
        {
            get
            {
                return this.CityRateField;
            }
            set
            {
                this.CityRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=8)]
        public string CountyRate
        {
            get
            {
                return this.CountyRateField;
            }
            set
            {
                this.CountyRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=9)]
        public string CityDistrictRate
        {
            get
            {
                return this.CityDistrictRateField;
            }
            set
            {
                this.CityDistrictRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=10)]
        public string CountyDistrictRate
        {
            get
            {
                return this.CountyDistrictRateField;
            }
            set
            {
                this.CountyDistrictRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=11)]
        public string SpecialDistrictRate
        {
            get
            {
                return this.SpecialDistrictRateField;
            }
            set
            {
                this.SpecialDistrictRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=12)]
        public string NotesCodes
        {
            get
            {
                return this.NotesCodesField;
            }
            set
            {
                this.NotesCodesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public string NotesDesc
        {
            get
            {
                return this.NotesDescField;
            }
            set
            {
                this.NotesDescField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=14)]
        public FTReference.InformationComponent[] InformationComponents
        {
            get
            {
                return this.InformationComponentsField;
            }
            set
            {
                this.InformationComponentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=15)]
        public string TotalTaxExempt
        {
            get
            {
                return this.TotalTaxExemptField;
            }
            set
            {
                this.TotalTaxExemptField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InformationComponent", Namespace="http://www.serviceobjects.com")]
    public partial class InformationComponent : object
    {
        
        private string NameField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxInfo", Namespace="http://www.serviceobjects.com")]
    public partial class TaxInfo : object
    {
        
        private string ZipField;
        
        private string CityField;
        
        private string CountyField;
        
        private string CountyFIPSField;
        
        private string StateNameField;
        
        private string StateAbbreviationField;
        
        private decimal TotalTaxRateField;
        
        private string TotalTaxExemptField;
        
        private decimal StateRateField;
        
        private decimal CityRateField;
        
        private decimal CountyRateField;
        
        private decimal CountyDistrictRateField;
        
        private decimal CityDistrictRateField;
        
        private FTReference.Err ErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Zip
        {
            get
            {
                return this.ZipField;
            }
            set
            {
                this.ZipField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string City
        {
            get
            {
                return this.CityField;
            }
            set
            {
                this.CityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string County
        {
            get
            {
                return this.CountyField;
            }
            set
            {
                this.CountyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string CountyFIPS
        {
            get
            {
                return this.CountyFIPSField;
            }
            set
            {
                this.CountyFIPSField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string StateName
        {
            get
            {
                return this.StateNameField;
            }
            set
            {
                this.StateNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string StateAbbreviation
        {
            get
            {
                return this.StateAbbreviationField;
            }
            set
            {
                this.StateAbbreviationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public decimal TotalTaxRate
        {
            get
            {
                return this.TotalTaxRateField;
            }
            set
            {
                this.TotalTaxRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=7)]
        public string TotalTaxExempt
        {
            get
            {
                return this.TotalTaxExemptField;
            }
            set
            {
                this.TotalTaxExemptField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public decimal StateRate
        {
            get
            {
                return this.StateRateField;
            }
            set
            {
                this.StateRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public decimal CityRate
        {
            get
            {
                return this.CityRateField;
            }
            set
            {
                this.CityRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public decimal CountyRate
        {
            get
            {
                return this.CountyRateField;
            }
            set
            {
                this.CountyRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public decimal CountyDistrictRate
        {
            get
            {
                return this.CountyDistrictRateField;
            }
            set
            {
                this.CountyDistrictRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public decimal CityDistrictRate
        {
            get
            {
                return this.CityDistrictRateField;
            }
            set
            {
                this.CityDistrictRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=13)]
        public FTReference.Err Error
        {
            get
            {
                return this.ErrorField;
            }
            set
            {
                this.ErrorField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxInfoResponse", Namespace="http://www.serviceobjects.com")]
    public partial class TaxInfoResponse : object
    {
        
        private FTReference.TaxInfo[] ResultsField;
        
        private FTReference.Err ErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public FTReference.TaxInfo[] Results
        {
            get
            {
                return this.ResultsField;
            }
            set
            {
                this.ResultsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public FTReference.Err Error
        {
            get
            {
                return this.ErrorField;
            }
            set
            {
                this.ErrorField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CanadianTaxInfo", Namespace="http://www.serviceobjects.com")]
    public partial class CanadianTaxInfo : object
    {
        
        private string ProvinceNameField;
        
        private string ProvinceAbbreviationField;
        
        private decimal GoodsSalesTaxField;
        
        private decimal ProvinceSalesTaxField;
        
        private decimal HarmonizedSalesTaxField;
        
        private string ApplyGSTFirstField;
        
        private FTReference.Err ErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ProvinceName
        {
            get
            {
                return this.ProvinceNameField;
            }
            set
            {
                this.ProvinceNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ProvinceAbbreviation
        {
            get
            {
                return this.ProvinceAbbreviationField;
            }
            set
            {
                this.ProvinceAbbreviationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public decimal GoodsSalesTax
        {
            get
            {
                return this.GoodsSalesTaxField;
            }
            set
            {
                this.GoodsSalesTaxField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public decimal ProvinceSalesTax
        {
            get
            {
                return this.ProvinceSalesTaxField;
            }
            set
            {
                this.ProvinceSalesTaxField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public decimal HarmonizedSalesTax
        {
            get
            {
                return this.HarmonizedSalesTaxField;
            }
            set
            {
                this.HarmonizedSalesTaxField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=5)]
        public string ApplyGSTFirst
        {
            get
            {
                return this.ApplyGSTFirstField;
            }
            set
            {
                this.ApplyGSTFirstField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=6)]
        public FTReference.Err Error
        {
            get
            {
                return this.ErrorField;
            }
            set
            {
                this.ErrorField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.serviceobjects.com", ConfigurationName="FTReference.ISOAP")]
    public interface ISOAP
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/ISOAP/GetBestMatch", ReplyAction="http://www.serviceobjects.com/ISOAP/GetBestMatchResponse")]
        System.Threading.Tasks.Task<FTReference.BestMatchResponse> GetBestMatchAsync(string Address, string Address2, string City, string State, string Zip, string TaxType, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/ISOAP/GetTaxInfoByCityCountyState", ReplyAction="http://www.serviceobjects.com/ISOAP/GetTaxInfoByCityCountyStateResponse")]
        System.Threading.Tasks.Task<FTReference.TaxInfo> GetTaxInfoByCityCountyStateAsync(string City, string County, string State, string TaxType, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/ISOAP/GetTaxInfoByCityState", ReplyAction="http://www.serviceobjects.com/ISOAP/GetTaxInfoByCityStateResponse")]
        System.Threading.Tasks.Task<FTReference.TaxInfoResponse> GetTaxInfoByCityStateAsync(string City, string State, string TaxType, string LicenseKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.serviceobjects.com/ISOAP/GetCanadianTaxInfoByProvince", ReplyAction="http://www.serviceobjects.com/ISOAP/GetCanadianTaxInfoByProvinceResponse")]
        System.Threading.Tasks.Task<FTReference.CanadianTaxInfo> GetCanadianTaxInfoByProvinceAsync(string Province, string LicenseKey);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public interface ISOAPChannel : FTReference.ISOAP, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "8.0.0")]
    public partial class SOAPClient : System.ServiceModel.ClientBase<FTReference.ISOAP>, FTReference.ISOAP
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SOAPClient() : 
                base(SOAPClient.GetDefaultBinding(), SOAPClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.FastTaxSOAP.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SOAPClient(EndpointConfiguration endpointConfiguration) : 
                base(SOAPClient.GetBindingForEndpoint(endpointConfiguration), SOAPClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SOAPClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SOAPClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SOAPClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SOAPClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SOAPClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<FTReference.BestMatchResponse> GetBestMatchAsync(string Address, string Address2, string City, string State, string Zip, string TaxType, string LicenseKey)
        {
            return base.Channel.GetBestMatchAsync(Address, Address2, City, State, Zip, TaxType, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<FTReference.TaxInfo> GetTaxInfoByCityCountyStateAsync(string City, string County, string State, string TaxType, string LicenseKey)
        {
            return base.Channel.GetTaxInfoByCityCountyStateAsync(City, County, State, TaxType, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<FTReference.TaxInfoResponse> GetTaxInfoByCityStateAsync(string City, string State, string TaxType, string LicenseKey)
        {
            return base.Channel.GetTaxInfoByCityStateAsync(City, State, TaxType, LicenseKey);
        }
        
        public System.Threading.Tasks.Task<FTReference.CanadianTaxInfo> GetCanadianTaxInfoByProvinceAsync(string Province, string LicenseKey)
        {
            return base.Channel.GetCanadianTaxInfoByProvinceAsync(Province, LicenseKey);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        #if !NET6_0_OR_GREATER
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        #endif
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.FastTaxSOAP))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.FastTaxSOAP))
            {
                return new System.ServiceModel.EndpointAddress("https://sws.serviceobjects.com/FT/SOAP.svc/SOAP");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return SOAPClient.GetBindingForEndpoint(EndpointConfiguration.FastTaxSOAP);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return SOAPClient.GetEndpointAddress(EndpointConfiguration.FastTaxSOAP);
        }
        
        public enum EndpointConfiguration
        {
            
            FastTaxSOAP,
        }
    }
}
